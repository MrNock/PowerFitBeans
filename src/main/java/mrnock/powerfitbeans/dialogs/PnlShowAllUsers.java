package mrnock.powerfitbeans.dialogs;

import java.awt.BorderLayout;
import java.io.File;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableModel;
import mrnock.powerfitbeans.MainForm;
import mrnock.powerfitbeans.dto.Attempt;
import mrnock.powerfitbeans.dto.Review;
import mrnock.powerfitbeans.dto.User;
import uk.co.caprica.vlcj.player.component.EmbeddedMediaPlayerComponent;

/**
 * This PnlShowAllUsers class extends from JPanel and it is used to get all
 * users information in the app, enabling the instructor to provide new reviews
 * or edit those already provided. Besides, the instructor can delete attempts
 * after confirming the action.
 *
 * @author Richard Navarro {@literal <richardnavarro@paucasesnovescifp.cat>}
 * @version 2.0 Final version to submit for Unit 1 (Desarrollo de Interfaces)
 * @since 1.5
 */
public class PnlShowAllUsers extends javax.swing.JPanel {

    private MainForm mainForm;
    private ArrayList<User> users;
    private ArrayList<Attempt> attempts;
    private EmbeddedMediaPlayerComponent mediaPlayer;
    private boolean playVideo = false;
    private boolean isPlaying = false;
    private int idReviewer;
    private Review selectedReview;

    final String VIDEO_PATH = "C:\\Users\\SilviaRichard\\AppData\\Local\\Simulap\\videos";

    /**
     * Creates new form PnlShowAllUsers
     *
     * @param mainForm information from the MainForm screen
     * @param idReviewer to identify the Reviewer
     */
    public PnlShowAllUsers(MainForm mainForm, int idReviewer) {
        this.mainForm = mainForm;
        this.idReviewer = idReviewer;

        initComponents();
        setBounds(10, 10, 950, 500);
        mediaPlayer = new EmbeddedMediaPlayerComponent();

        pnlVideoPlayer.add(mediaPlayer, BorderLayout.CENTER);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlVideoPlayer = new javax.swing.JPanel();
        scrListUsers = new javax.swing.JScrollPane();
        lstUsers = new javax.swing.JList<>();
        scrTableSelectedUser = new javax.swing.JScrollPane();
        tblSelectedUserInfo = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnPauseResumeVideo = new javax.swing.JButton();
        pnlExtraInfo = new javax.swing.JPanel();
        lblQualification = new javax.swing.JLabel();
        sldQualification = new javax.swing.JSlider();
        lblComments = new javax.swing.JLabel();
        scrComments = new javax.swing.JScrollPane();
        txtComments = new javax.swing.JTextArea();
        btnEditReview = new javax.swing.JButton();
        btnAddReview = new javax.swing.JButton();
        btnDeleteAttempt = new javax.swing.JButton();

        setLayout(null);

        pnlVideoPlayer.setBorder(javax.swing.BorderFactory.createTitledBorder("Video Player"));
        pnlVideoPlayer.setLayout(new java.awt.BorderLayout());
        add(pnlVideoPlayer);
        pnlVideoPlayer.setBounds(20, 250, 240, 160);

        lstUsers.setBorder(javax.swing.BorderFactory.createTitledBorder("Users"));
        lstUsers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstUsersMouseClicked(evt);
            }
        });
        scrListUsers.setViewportView(lstUsers);

        add(scrListUsers);
        scrListUsers.setBounds(40, 70, 190, 160);

        scrTableSelectedUser.setBorder(javax.swing.BorderFactory.createTitledBorder("Attempts of Selected User"));

        tblSelectedUserInfo.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        tblSelectedUserInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Activity", "Start_Date", "End_Date"
            }
        ));
        scrTableSelectedUser.setViewportView(tblSelectedUserInfo);

        add(scrTableSelectedUser);
        scrTableSelectedUser.setBounds(270, 10, 490, 230);

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(20, 20, 72, 23);

        btnPauseResumeVideo.setText("Pause");
        btnPauseResumeVideo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPauseResumeVideoActionPerformed(evt);
            }
        });
        add(btnPauseResumeVideo);
        btnPauseResumeVideo.setBounds(80, 420, 110, 30);

        pnlExtraInfo.setBorder(javax.swing.BorderFactory.createTitledBorder("Extra Info"));
        pnlExtraInfo.setLayout(null);

        lblQualification.setText("Qualification");
        lblQualification.setToolTipText("");
        pnlExtraInfo.add(lblQualification);
        lblQualification.setBounds(10, 20, 100, 30);

        sldQualification.setMajorTickSpacing(1);
        sldQualification.setMaximum(5);
        sldQualification.setPaintLabels(true);
        sldQualification.setPaintTicks(true);
        sldQualification.setSnapToTicks(true);
        sldQualification.setToolTipText("");
        sldQualification.setValue(3);
        sldQualification.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pnlExtraInfo.add(sldQualification);
        sldQualification.setBounds(90, 14, 200, 44);

        lblComments.setText("Comments");
        lblComments.setToolTipText("");
        pnlExtraInfo.add(lblComments);
        lblComments.setBounds(10, 60, 70, 20);

        txtComments.setColumns(20);
        txtComments.setLineWrap(true);
        txtComments.setRows(5);
        scrComments.setViewportView(txtComments);

        pnlExtraInfo.add(scrComments);
        scrComments.setBounds(80, 70, 370, 80);

        add(pnlExtraInfo);
        pnlExtraInfo.setBounds(280, 250, 480, 160);

        btnEditReview.setText("Edit Review");
        btnEditReview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditReviewActionPerformed(evt);
            }
        });
        add(btnEditReview);
        btnEditReview.setBounds(540, 420, 110, 30);

        btnAddReview.setText("Add Review");
        btnAddReview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddReviewActionPerformed(evt);
            }
        });
        add(btnAddReview);
        btnAddReview.setBounds(400, 420, 100, 30);

        btnDeleteAttempt.setText("Delete Attempt");
        btnDeleteAttempt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteAttemptActionPerformed(evt);
            }
        });
        add(btnDeleteAttempt);
        btnDeleteAttempt.setBounds(150, 20, 110, 30);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * This method navigates back to the PnlAttempts screen.
     */
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        //mainForm.showPnlAttempts();

    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * This method initializes the Datatable component with the information.
     */
    private void lstUsersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstUsersMouseClicked

        initializeUserDataTable(users.get(lstUsers.getSelectedIndex()));
    }//GEN-LAST:event_lstUsersMouseClicked

    /**
     * This method controls the video player by playing and pausing the
     * recordings.
     */
    private void btnPauseResumeVideoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPauseResumeVideoActionPerformed
        if (isPlaying) {
            btnPauseResumeVideo.setText("Resume");
            mediaPlayer.mediaPlayer().controls().pause();
            isPlaying = false;

        } else {
            btnPauseResumeVideo.setText("Play");
            mediaPlayer.mediaPlayer().controls().play();
            isPlaying = true;
        }
    }//GEN-LAST:event_btnPauseResumeVideoActionPerformed

    /**
     * This method calls the updateReview method.
     */
    private void btnEditReviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditReviewActionPerformed
        Review review = new Review();

        review.setId(selectedReview.getId());
        review.setIdReviewer(idReviewer);
        review.setScore(sldQualification.getValue());
        review.setComment(txtComments.getText());
        mainForm.updateReview(review);
    }//GEN-LAST:event_btnEditReviewActionPerformed

    /**
     * This method calls the insertReview method.
     */
    private void btnAddReviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddReviewActionPerformed
        Review review = new Review();
        Attempt attempt = attempts.get(tblSelectedUserInfo.getSelectedRow());
        review.setIdAttempt(attempt.getId());
        review.setIdReviewer(idReviewer);
        review.setScore(sldQualification.getValue());
        review.setComment(txtComments.getText());
        mainForm.insertReview(review);
    }//GEN-LAST:event_btnAddReviewActionPerformed

    /**
     * This method calls the deleteAttempt method.
     */
    private void btnDeleteAttemptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteAttemptActionPerformed
        playVideo = false;
        Attempt attempt = attempts.get(tblSelectedUserInfo.getSelectedRow());
        if (mainForm.deleteAttempt(attempt)) {

            DefaultTableModel dtm = (DefaultTableModel) tblSelectedUserInfo.getModel();
            dtm.removeRow(tblSelectedUserInfo.getSelectedRow());

            tblSelectedUserInfo.setModel(dtm);

            if (tblSelectedUserInfo.getRowCount() > 0) {
                tblSelectedUserInfo.setRowSelectionInterval(0, 0);
            }
        }
        playVideo = true;
    }//GEN-LAST:event_btnDeleteAttemptActionPerformed

    /**
     * This public method initializes the list of users.
     */
    public void initializeElements() {
        initializeUserList();
    }

    /**
     * This private method initializes the list of users.
     */
    private void initializeUserList() {
        DefaultListModel dlm = new DefaultListModel();
        users = mainForm.getAllNormalUsers();
        lstUsers.removeAll();
        for (User u : users) {
            dlm.addElement(u.getUserName());
        }
        lstUsers.setModel(dlm);
    }

    /**
     * This private method initializes the Datatable of users.
     */
    private void initializeUserDataTable(User user) {
        playVideo = false;
        attempts = mainForm.getAttemptsPerUser(user);
        DefaultTableModel dtm = (DefaultTableModel) tblSelectedUserInfo.getModel();

        dtm.setRowCount(0);
        for (Attempt intent : attempts) {
            String valueEndDate = (intent.getTimestartEnd() == null ? "" : intent.getTimestartEnd());
            dtm.insertRow(dtm.getRowCount(), new Object[]{
                intent.getId(), intent.getExerciseName(), intent.getTimestampStart(), valueEndDate});
        }

        tblSelectedUserInfo.setModel(dtm);

        tblSelectedUserInfo.getSelectionModel().addListSelectionListener((ListSelectionEvent evt) -> {
            if (evt.getValueIsAdjusting()) {
                return;
            }
            playSelectedVideo(tblSelectedUserInfo.getSelectedRow());
            setReviewData(tblSelectedUserInfo.getSelectedRow());
        });

        playVideo = true;
        tblSelectedUserInfo.setRowSelectionInterval(0, 0);
    }

    /**
     * This method adds the review details for a specific selected row.
     */
    private void setReviewData(int row) {
        if (playVideo) {
            Attempt intent = attempts.get(row);
            selectedReview = mainForm.getReviewByAttempt(intent.getId());

            if (selectedReview.getComment() == null || selectedReview.getComment().isEmpty()) {
                btnEditReview.setVisible(false);
                txtComments.setText("");
                sldQualification.setValue(3);
            } else {
                btnEditReview.setVisible(true);
                sldQualification.setValue(selectedReview.getScore());
                txtComments.setText(selectedReview.getComment());
            }
        }
    }

    /**
     * This method plays the video for a specific selected row.
     */
    private void playSelectedVideo(int attempt) {
        if (playVideo) {
            String videoName = attempts.get(attempt).getVideoFile();
            String userName = attempts.get(attempt).getUserName();
            String videoFileAbsolutePath = VIDEO_PATH + File.separator + videoName;

            File f = new File(videoFileAbsolutePath);
            if (f.exists()) {

                mediaPlayer.mediaPlayer().media().play(videoFileAbsolutePath);
                pnlVideoPlayer.setBorder(javax.swing.BorderFactory.createTitledBorder("Video Player - " + videoName));
                scrTableSelectedUser.setBorder(javax.swing.BorderFactory.createTitledBorder(userName + "'s Attempts"));
                isPlaying = true;
                btnPauseResumeVideo.setText("Pause");
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddReview;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeleteAttempt;
    private javax.swing.JButton btnEditReview;
    private javax.swing.JButton btnPauseResumeVideo;
    private javax.swing.JLabel lblComments;
    private javax.swing.JLabel lblQualification;
    private javax.swing.JList<String> lstUsers;
    private javax.swing.JPanel pnlExtraInfo;
    private javax.swing.JPanel pnlVideoPlayer;
    private javax.swing.JScrollPane scrComments;
    private javax.swing.JScrollPane scrListUsers;
    private javax.swing.JScrollPane scrTableSelectedUser;
    private javax.swing.JSlider sldQualification;
    private javax.swing.JTable tblSelectedUserInfo;
    private javax.swing.JTextArea txtComments;
    // End of variables declaration//GEN-END:variables
}
